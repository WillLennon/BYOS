These are steps to create an Azure Scaleset with a custom OS disk size and custom software. Follow these steps to create a scaleset suitable for use as an Azure DevOps Elastic Agent Pool.

If you just want to create a scaleset with the default 128GiB OS disk using a publicly available Azure image, then skip straight to Step 6 and use the public image name (UbuntuLTS, Win2019DataCenter, etc) to create the scaleset.  Otherwise follow these steps to customize your VM image.

Prerequisites:
Install Azure CLI:
   https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest
Open Powershell and login to your Azure subscription:
   az login
Set your subscription:
   az account show
   az account set --subscription <Subscription Name or Id>

Set the following Powershell variables:

$resourceGroup = ''  # Your Azure Resource Group to put your scaleset and other resources
$vmName = 'tempVM'   # The name of your temporary VM to customize
$diskSizeGb = 128    # desired size of the OS disk.  128 Gb is the default
$adminUserName = ''  # administrator user name
$adminPassword = ''  # administrator password. Must be 12+ characters.
$imageName = ''      # Name of the customized VM image this document helps create
$scaleSetName = ''   # Name of the Azure VM Scaleset this document helps create
$vmSku = 'Standard_DS1_v2' # Size of VMs to use.  Default is Standard_DS1_v2 which is small.

# If using a base public image from the Azure gallery:
$baseImageName = ''  # Name from Azure's public gallery. Ex: Win2019DataCenter, UbuntuLTS

# If using a custom Vhd image:
$storageAccount = '' # Azure storage account for Vhds
$vhdUrl = ''         # URL to Vhd in your local storage account.
$osType = ''         # OS Type of custom Vhd. Windows or Linux

1.  Create a VM starting with your base image.
    1a. If starting with a published Azure image:
        az vm create --resource-group $resourceGroup --name $vmName --image $baseImageName $baseImageName --os-disk-size-gb $diskSizeGb  --admin-username $adminUsername --admin-password $adminPassword
    
    1b. If using a custom VHD, the VHD must be in your storage account.  If the VHD is elsewhere, follow this doc to copy the VHD to your storage account before proceeding: https://github.com/WillLennon/BYOS/blob/master/vmss/CLI/CopyVhd.txt
    
        1b-1. Create the VM with with the custom vhd
        az vm create --resource-group $resourceGroup --name $vmName --image $vhdUrl --os-type $osType --os-disk-size-gb $diskSizeGb --use-unmanaged-disk --admin-username $adminUsername --admin-password $adminPassword --storage-account $storageAccount

        1b-2. Convert the VM's OS disk to a managed disk
        az vm stop --resource-group $resourceGroup --name $vmName
        az vm deallocate --resource-group $resourceGroup --name $vmName
        az vm convert --resource-group $resourceGroup --name $vmName
        az vm start --resource-group $resourceGroup --name $vmName
    
2. Remote Desktop (or SSH) to the VM's public IP address to customize the image.
   You may need to open ports in the firewall to unblock the RDP (3389) or SSH (22) ports.

   2a. [Windows] If $diskSizeGB > 128, extend the OS disk partition to fill the disk.
       Open DiskPart tool as administrator and run these DiskPart commands:
          list volume  (to see the volumes)
          select volume 2 (depends on which volume is the OS drive)
          extend size 72000 (for example, to extend the drive by 72 GiB, from 128GiB to 200GiB)
          
   2b. Install any additional software on the VM

   2c. Reboot the VM when finished with customizations
   
   2d. Generalize the VM. Connect to the VM and run this command:
       [Linux] sudo waagent -deprovision+user -force
       Exit shell when the command finishes
       
       [Windows] From an admin console window: C:\Windows\System32\sysprep\sysprep.exe /generalize /oobe /shutdown
       VERY IMPORTANT! Wait for the Windows VM to finish generalization and shutdown.
       DO NOT PROCEED UNTIL THE VM HAS STOPPED. Allow 60 minutes.
   
3. Generate the VM Image.  The generalization process makes the VM non-functional so delete the VM.
     az vm deallocate --resource-group $resourceGroup --name $vmName
     az vm generalize --resource-group $resourceGroup --name $vmName
     az image create  --resource-group $resourceGroup --name $imageName --source $vmName
     az vm delete --resource-group $resourceGroup --name $vmName 
     
4. Create the scaleset based on the custom VM image:
     az vmss create --resource-group $resourceGroup --name $scaleSetName --image $imageName --admin-username $adminUsername --admin-password $adminPassword --vm-sku $vmSku --instance-count 2 --disable-overprovision --upgrade-policy-mode manual --load-balancer '""'
     
5. Navigate to portal.azure.com and verify that two VMs are created, have different names, and reach the Succeeded state.

Navigate to your Azure DevOps account to create you Elastic Agent Pool!
